
file(GLOB SRC ${CMAKE_CURRENT_LIST_DIR}/*.cc)

file(MAKE_DIRECTORY ${CMAKE_BINARY_DIR}/generated)
include_directories(${CMAKE_BINARY_DIR}/generated)

file(GLOB QT_RESOURCES ${CMAKE_CURRENT_LIST_DIR}/*.qrc)
foreach(QT_RESOURCE ${QT_RESOURCES})
    get_filename_component(QT_RESOURCE_NAME ${QT_RESOURCE} NAME_WE)
    execute_process(COMMAND ${QT_RCC_EXECUTABLE} ${QT_RESOURCE} -o ${CMAKE_BINARY_DIR}/generated/${QT_RESOURCE_NAME}.cc)
    set(SRC ${SRC} ${CMAKE_BINARY_DIR}/generated/${QT_RESOURCE_NAME}.cc)
endforeach()

file(GLOB UI_FILES ${CMAKE_CURRENT_LIST_DIR}/*.ui)
foreach(UI_FILE ${UI_FILES})
    get_filename_component(UI_NAME ${UI_FILE} NAME_WE)
    execute_process(COMMAND ${QT_UIC_EXECUTABLE} ${UI_FILE} -o ${CMAKE_BINARY_DIR}/generated/${UI_NAME}_ui.hh)
endforeach()
file(GLOB HEADER_FILES ${CMAKE_CURRENT_LIST_DIR}/*.hh)
set(MOC_FILES "")
foreach(HEADER_FILE ${HEADER_FILES})
    file(READ ${HEADER_FILE} FILE_CONTENT)
    string(FIND "${FILE_CONTENT}" "Q_OBJECT" match_res)
    if(NOT ${match_res} EQUAL -1)
        set(MOC_FILES ${MOC_FILES} ${HEADER_FILE})
    endif()
endforeach()
foreach(MOC_FILE ${MOC_FILES})
    get_filename_component(MOC_NAME ${MOC_FILE} NAME_WE)
    execute_process(COMMAND ${QT_MOC_EXECUTABLE} ${MOC_FILE} -o ${CMAKE_BINARY_DIR}/generated/${MOC_NAME}.moc.cc)
    set(SRC ${SRC} ${CMAKE_BINARY_DIR}/generated/${MOC_NAME}.moc.cc)
endforeach()

if(ANDROID)
    add_library(main SHARED ${SRC})
else()
    add_executable(main ${SRC})
endif()

target_compile_options(main PRIVATE -fPIC)

target_link_libraries(main ${CONAN_LIBS})
